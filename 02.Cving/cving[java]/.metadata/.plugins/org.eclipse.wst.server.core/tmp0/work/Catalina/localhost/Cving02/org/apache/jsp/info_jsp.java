/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.51
 * Generated at: 2022-11-17 02:11:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cving.dbms.*;
import cving.util.*;
import cving.vo.*;

public final class info_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/./config/config.jsp", Long.valueOf(1667983400510L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cving.dbms");
    _jspx_imports_packages.add("cving.vo");
    _jspx_imports_packages.add("cving.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

UserVO LoginVO = (UserVO)session.getAttribute("login");
if(LoginVO == null)
{
	//로그인을 하지 않으면 login페이지로 넘겨준다.
	response.sendRedirect("login.jsp");
	return;
}

String code = request.getParameter("code");
if(code == null) // 코드가 없는 코드다.
{
	response.sendRedirect("index.jsp"); //바로 보내버린다.
}
DBManager db = new DBManager();

db.DBOpen();

String sql = "";
sql  = "select mtitle, mhobby, mscore, mtime, openyear, makingyear, male, " ; 
sql += "female, teenage, twenty, thirty, forty, fifty, mstory, mimg " ;
sql += "from movie where mcode = " + code;

db.OpenQuery(sql);

db.GetNext(); // 값을 가져옴.

String mtitle = db.GetValue("mtitle");
String mhobby = db.GetValue("mhobby");
String mscore = db.GetValue("mscore");
String mtime = db.GetValue("mtime");
String openyear = db.GetValue("openyear");
String makingyear = db.GetValue("makingyear");
String male = db.GetValue("male");
String female = db.GetValue("female");
String teenage = db.GetValue("teenage");
String twenty = db.GetValue("twenty");
String thirty = db.GetValue("thirty");
String forty = db.GetValue("forty");
String fifty = db.GetValue("fifty");
String mstory = db.GetValue("mstory");
mstory = mstory.replace("?", "<br>");
String mimg = db.GetValue("mimg");

db.CloseQuery();

sql = "";
sql = "select hobby from hobby where uno = " + LoginVO.getUno(); //hobby 테이블에 로그인한 유저 vo의 번호와 uno가 맞으면 hobby컬럼을 가지고 온다.
db.OpenQuery(sql);
String hobby = "";
while(db.GetNext())
{
	if(!hobby.equals("")) hobby += ","; 
	hobby += db.GetValue("hobby");
}
System.out.println("내 장르:" + hobby);
String realhobby[] = hobby.split(","); //쉼표를 기준으로 문자열을 나눠서 배열을 만들어준다.
db.CloseQuery();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t<meta charset=\"EUC-KR\">\r\n");
      out.write("\t<title>CVING</title>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"css/cving.css\">\r\n");
      out.write("\t<script src=\"./jquery-3.6.0.js\"></script>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.css\">\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t$(\"input\").keyup(function(e){\r\n");
      out.write("\t\t\t\tif(e.keyCode == 13)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tDoSearch();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#btn_search\").click(function(){\r\n");
      out.write("\t\t\t\tDoSearch();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('.slider').bxSlider({\r\n");
      out.write("\t\t        mode: 'horizontal', // 슬라이드 모드 ('fade', 'horizontal', 'vertical' 이 있음)\r\n");
      out.write("\t\t        pager: true, // 페이지 표시 보여짐\r\n");
      out.write("\t\t        minSlides : 4,\r\n");
      out.write("\t\t        maxSlides : 4,\r\n");
      out.write("\t\t        slideMargin : 1,\r\n");
      out.write("\t\t        slideWidth : 800,\r\n");
      out.write("\t\t        moveSlides : 1,\r\n");
      out.write("\t\t        infiniteLoop : false,\r\n");
      out.write("\t\t        hideControlOnEnd: true,\r\n");
      out.write("\t\t        caption: true,\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t//도넛 차트\r\n");
      out.write("\t\t\tnew Chart(document.getElementById(\"doughnut-chart\"),{\r\n");
      out.write("\t    \t\ttype: 'doughnut',\r\n");
      out.write("\t    \t\tdata:{\r\n");
      out.write("\t    \t\t\t\tlabels: [\"남자\",\"여자\"],\r\n");
      out.write("\t    \t\t\t\t\t\r\n");
      out.write("\t      \t\t\t\tdatasets: [{\r\n");
      out.write("\t          \t\t\t\tlabel: \"성별 (%)\",\r\n");
      out.write("\t\t\t\t         \tbackgroundColor: [\"#86C8FC\",\"#FF7E5A\"],\r\n");
      out.write("\t\t\t\t        \tborderColor:\"gray\",\r\n");
      out.write("\t\t\t\t          \tdata: ['");
      out.print( male );
      out.write("', '");
      out.print( female );
      out.write("']\r\n");
      out.write("\t        \t\t\t}],\r\n");
      out.write("\t    \t\t\t},\r\n");
      out.write("\t\t\t\toptions:{\r\n");
      out.write("\t\t\t\t\tlegend: {\r\n");
      out.write("\t\t\t\t\t\tposition: \"bottom\",\r\n");
      out.write("\t\t\t\t\t\tlabels: {\r\n");
      out.write("\t\t\t\t                // 이 더 특정한 폰트 속성은 전역 속성을 덮어씁니다\r\n");
      out.write("\t\t\t              \t  fontColor: 'black'\r\n");
      out.write("\t\t\t           \t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\ttitle:{\r\n");
      out.write("\t\t\t\t        display: true,\r\n");
      out.write("\t\t\t\t        text: '성별 선호도',\r\n");
      out.write("\t\t\t\t        fontColor: 'black',\r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t\t       \r\n");
      out.write("\t\t\t\t       \t\t\t        \r\n");
      out.write("\t      \t\t\t},\r\n");
      out.write("\t      \t\t\t//애니메이션 제거\r\n");
      out.write("\t      \t\t\tanimation: {\r\n");
      out.write("\t      \t\t        duration: 0\r\n");
      out.write("\t      \t\t    },\r\n");
      out.write("\t      \t\t    //원 차트 시작위치 12시로 만들기\r\n");
      out.write("\t      \t\t    rotation :-1.5 * Math.PI,\r\n");
      out.write("\t    \t\t}\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t\t//바  차트\r\n");
      out.write("\t\t\tnew Chart(document.getElementById(\"bar-chart\"), {\r\n");
      out.write("\t\t\t    type: 'bar',\r\n");
      out.write("\t\t\t    data: {\r\n");
      out.write("\t\t\t      labels: [\"10대\", \"20대\", \"30대\", \"40대\", \"50대이상\"],\r\n");
      out.write("\t\t\t     \t\r\n");
      out.write("\t\t\t      datasets: [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t          //label: \"나이별 (%)\",\r\n");
      out.write("\t\t\t\t\t\tbackgroundColor: [\"#f8a1a4\", \"#ffcca9\",\"#fffa99\",\"#98e0ad\",\"#aaaeeb\"],\r\n");
      out.write("\t\t\t\t\t\tdata: ['");
      out.print( teenage );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( twenty );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( thirty );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( forty );
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print( fifty );
      out.write("']\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t      ]\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    options: {\r\n");
      out.write("\t\t\t      legend: { display: false },\r\n");
      out.write("\t\t\t      title: {\r\n");
      out.write("\t\t\t        display: true,\r\n");
      out.write("\t\t\t        text: '나이별 선호도',\r\n");
      out.write("\t\t\t        fontColor: 'black'\r\n");
      out.write("\t\t\t      },\r\n");
      out.write("\t\t\t      animation: {\r\n");
      out.write("\t      \t\t        duration: 0\r\n");
      out.write("\t      \t\t    },\r\n");
      out.write("\t\t\t      scales: {\r\n");
      out.write("\t\t\t\t\t\tyAxes: [{\r\n");
      out.write("\t\t\t\t\t\t\tdisplay: true,\r\n");
      out.write("\t\t\t\t\t\t\tticks: {\r\n");
      out.write("\t\t\t\t\t\t\t\tsuggestedMax: 100,    // minimum will be 0, unless there is a lower value.\r\n");
      out.write("\t\t\t\t\t\t\t\t// OR //\r\n");
      out.write("\t\t\t\t\t\t\t\tbeginAtZero: true   // minimum value will be 0.\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}]\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction DoSearch()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tif($(\"#search\").val() == \"\")\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\talert(\"검색어를 입력하세요!\");\r\n");
      out.write("\t\t\t\t$(\"#search\").foucus();\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tdocument.location = \"search.jsp?key=\" + $(\"#search\").val();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<header id = \"header\">\r\n");
      out.write("\t\t\t\t<div class=\"logo\">\r\n");
      out.write("\t\t\t\t\t<a href=\"./index.jsp\">\r\n");
      out.write("\t\t\t\t\t<img src=\"./img/logoback.png\" style=\"width:100%; height:100%;\">\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"logout\">\r\n");
      out.write("\t\t\t\t\t<a href=\"./logout.jsp\">로그아웃</a>\r\n");
      out.write("\t\t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"search\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"search\" name=\"search\" placeholder=\" 제목 장르 검색 해보세요 \">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"b_search\">\r\n");
      out.write("\t\t\t\t\t<img src=\"./img/search.png\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</header>\r\n");
      out.write("\t\t\t<div class=\"info_top\">\r\n");
      out.write("\t\t\t\t<div class=\"info_post\">\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print( mimg );
      out.write("\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<!-- 영화제목 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"info_moviename\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"info_maintext\"><b>");
      out.print( mtitle );
      out.write("</b></font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 영화평점 및 장르 등 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"info_total\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"info_subtext_1\">\r\n");
      out.write("\t\t\t\t\t\t\t평점( ");
      out.print( mscore );
      out.write(" ) | ");
      out.print( mhobby );
      out.write(" | 시간( ");
      out.print( mtime );
      out.write("분) \r\n");
      out.write("\t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"info_year\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"info_subtext_2\">\r\n");
      out.write("\t\t\t\t\t\t\t개봉 : ");
      out.print( openyear );
      out.write(" | 제작 : ");
      out.print( makingyear );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 영화 줄거리 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"info_summary\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"info_subtext_3\"><b>줄거리</b></font>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"info_textdiv\">\r\n");
      out.write("\t\t\t\t\t\t\t<font class=\"info_summarytext\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.print( mstory );
      out.write("\r\n");
      out.write(" \t\t\t\t\t\t\t</font>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 성별 나이별 관람 추이 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"info_hobby\">\r\n");
      out.write("\t\t\t\t\t\t<font class=\"info_subtext\"><b>성별 나이별 관람 추이</b></font>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"info_hobbylist\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 성별 그래프 표시부분 -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"info_gender\">\r\n");
      out.write("\t\t\t\t\t\t\t");

							if(male.equals("0") && female.equals("0"))
							{
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;&nbsp;성별 데이터가 없습니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							else
							{
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<canvas id=\"doughnut-chart\" width=\"300\" height=\"273\" style=\"background-color:#cccccce6;\"></canvas>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 나이별 그래프 표시부분 -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"info_age\">\r\n");
      out.write("\t\t\t\t\t\t\t");

							if(twenty.equals("0") && thirty.equals("0") && forty.equals("0") && fifty.equals("0"))
							{
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;나이별 데이터가 없습니다.\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							else
							{
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<canvas id=\"bar-chart\" width=\"300\" height=\"170\" style=\"background-color:#cccccce6;\"></canvas>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"margin-top:200px; margin-left:20px;\">\r\n");
      out.write("\t\t\t");

			String gen = "";
			if(LoginVO.getUgender().equals("M"))
			{
				gen = "남성";
			}else
			{
				gen = "여성";
			}
			
      out.write("\r\n");
      out.write("\t\t\t<h1>[ ");
      out.print( LoginVO.getUname() );
      out.write(" ]님이 좋아하실만한 다른 장르 영화 추천</h1>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"wrap\" style=\"margin-top:30px; width:100%; height:300px; display:flex;\">\r\n");
      out.write("\t\t\t\t");

				String gender = "";
				String age = "";
				
				if(LoginVO != null && LoginVO.getUage().equals("10"))
				{
					age = "teenage";
				}else if(LoginVO != null && LoginVO.getUage().equals("20"))
				{
					age = "twenty";
				}else if(LoginVO != null && LoginVO.getUage().equals("30"))
				{
					age = "thirty";
				}else if(LoginVO != null && LoginVO.getUage().equals("40"))
				{
					age = "forty";
				}else if(LoginVO != null && LoginVO.getUage().equals("50"))
				{
					age = "fifty";
				}
				if(LoginVO != null && LoginVO.getUgender().equals("M"))
				{
					gender = "male";
				}else if(LoginVO != null && LoginVO.getUgender().equals("W"))
				{
					gender = "female";
				}
				String subsql = "select sum(x." +gender +") as gender,sum(x." +age + ") as age,y.mhobby ";
				subsql+= "from movie x inner join genre y ";
				subsql+="on x.mcode = y.mcode ";
				subsql+="group by y.mhobby "; 
				subsql+="order by gender desc, age desc ";
				//System.out.print(subsql);
				
				db.OpenQuery(subsql);
				String new_hobby = "";
				int count = 0;
				
				while(db.GetNext())
				{	
					if(hobby.indexOf(db.GetValue("mhobby")) > -1)
					{
						continue;
					}
					else
					{
						if(!new_hobby.equals(""))
							new_hobby += ",";
						
						new_hobby += db.GetValue("mhobby");
						count++;
						if( count == 3)
							break;
					}
					
				}
				System.out.println("만들어진 추천장르 : " + new_hobby);
				db.CloseQuery();
				
				String hobby_list[] = new_hobby.split(",");
				
				sql = "select mcode,mhobby,mscore,mimg  from( ";
				sql += "select mcode, mhobby, mscore, mimg from movie ";
				sql += "where 1=1 "; //무조건 참 
				sql += "and mscore < 9.50 "; //평점9.50보다 작은거
				sql += "and mscore > 8.30 ";
				sql += "and used = 'Y' "; //영화가 정상적인 영화인지 ..
				if(gender.equals("male"))
				{
					sql += "and male > female ";
					//sql += "and male < 100 "; 
				}else
				{
					sql += "and male < female ";
					//sql += "and female < 100 ";
				}
				sql += "and " + age + " > 30 ";
				String sub_sql = "";
				
				for(int i = 0; i < hobby_list.length; i++)
				{
					if( !sub_sql.equals(""))
					{
						sub_sql += " or ";
					}
					sub_sql +=  " mhobby in (select mhobby from genre where mhobby like '%"+ hobby_list[i] +"%') ";
				}
				if( !sub_sql.equals(""))
				{
					sql += "and(" + sub_sql + ") ";
				}
				sql += "order by rand() limit 0, 100 ) x ";
				sql += "limit 0, 4 ";//점수기준 평점 내림차순으로 
				db.OpenQuery(sql);
				while(db.GetNext())
				{
					String mcode = db.GetValue("mcode");
					mimg = db.GetValue("mimg");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"m_imgin\" style=\"padding:0px 0px 100px 0px;\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"info.jsp?code=");
      out.print( mcode );
      out.write("\"><img src=\"");
      out.print( mimg );
      out.write("\"></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");

				}
				db.CloseQuery();
				
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<footer>\r\n");
      out.write("\t\t\t\t<article class=\"foot_menu\">\r\n");
      out.write("\t\t\t\t \t<hr style=\"background-color:white;\">\r\n");
      out.write("\t\t\t\t\t명칭: 주식회사 이젠 | 등록번호: 전북 소4048 | 등록연월일: 2022. 10. 14 | 제호: CVING<br>\r\n");
      out.write("\t\t\t\t\t발행: C team  | 발행소: 전라북도 전주시 덕진구 금암동 이젠컴퓨터학원 4층 407호<br>\r\n");
      out.write("\t\t\t\t\tCVING의 콘텐츠는 저작권법의 보호를 받으므로, 무단 전재, 복사, 배포 등을 금합니다.<br>\r\n");
      out.write("\t\t\t\t</article>\r\n");
      out.write("\t\t\t</footer>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");

db.DBClose();

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
